/*User*/
.loading {
    height: stretch;
    width: stretch;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: progress;
    font-family: "Open Sans", Arial, Helvetica, sans-serif;
    font-style: italic;
}
.rowSelected {
    background: #00e5e5;
    color: white !important;
}

.languageDropdown {
    margin-top: 20px;
    width: 130px;
}

.bottomButtons {
    margin: auto;
    width: 200px;
    margin-bottom: 10px;
}
.rightPanel {
    height: 90vh;
    width: 30vw;
}

.trueBoolean {
    color: green;
}
@keyframes blink {
    /**
     * At the start of the animation the dot
     * has an opacity of .2
     */
    0% {
        opacity: 0.2;
    }
    /**
     * At 20% the dot is fully visible and
     * then fades out slowly
     */
    20% {
        opacity: 1;
    }
    /**
     * Until it reaches an opacity of .2 and
     * the animation can start again
     */
    100% {
        opacity: 0.2;
    }
}

.loading span {
    text-align: center;
    /**
     * Use the blink animation, which is defined above
     */
    animation-name: blink;
    /**
     * The animation should take 1.4 seconds
     */
    animation-duration: 1.4s;
    /**
     * It will repeat itself forever
     */
    animation-iteration-count: infinite;
    /**
     * This makes sure that the starting style (opacity: .2)
     * of the animation is applied before the animation starts.
     * Otherwise we would see a short flash or would have
     * to set the default styling of the dots to the same
     * as the animation. Same applies for the ending styles.
     */
    animation-fill-mode: both;
}
.loadingText {
    text-align: center;
    font-size: x-large;
}

.loadingText span:nth-child(2) {
    /**
     * Starts the animation of the third dot
     * with a delay of .2s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: 0.2s;
}

.page-header {
    margin: 40px 49px 20px;
}

.loadingText span:nth-child(3) {
    /**
     * Starts the animation of the third dot
     * with a delay of .4s, otherwise all dots
     * would animate at the same time
     */
    animation-delay: 0.4s;
}

.falseBoolean {
    color: red;
}

.filtersOption {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.refreshButton {
    margin-right: 20px;
}

.card-header.header-with-button {
    display: flex;
    justify-content: space-between;
}

.fas {
    line-height: inherit
}

.statsPanelContent {
    display: flex;
    justify-content: space-between;
}

.statsPanelsContainer {
    display: flex;
    font-size: 18px;
    font-family: "Open Sans", Arial, Helvetica, sans-serif;
}

.statsPanel {
    flex-grow: 1;
    margin: 2vw;
    background-color: #337ab7;
    color: white;
}

.dismissRight {
    cursor: pointer;
}

.email.form-group {
    display: flex;
    align-items: baseline;
}

.form-control {
    margin-left: 10px;
}

.labelText {
    font-size: 14px;
    font-weight: 700;
}

.bottomButton {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.ActivationButton {
    width: 300px;
    margin-bottom: 10px;
}

.TableToolBar {
    margin-top: 10px;
    margin-bottom: 10px;
    margin-left: 20px;
}

.table-responsive {
    max-height: 92vh;
}

.tableContainer {
    display: flex;
    margin-left: 20px;
}

.table-responsive {
    flex-grow: 1;
}

.checkboxfilter {
    display: flex;
    margin-top: 2vh;
}
.checkboxfilter label {
    margin-left: 4px;
}

.checkboxfilter input {
    margin-left: 2px;
}
.usersPanel {
    height: none;
    width: none;
}

.inputValue {
    margin-right: 12px;
    font-size: 14px;
}

.inputValue.disabled {
    margin-right: 12px;
    font-size: 14px;
    background: #e3e3e3;
}

.textFilter {
    margin-top: 1vh;
    margin-right: 8px;
}

.AdminName {
    text-decoration: underline;
    cursor: pointer;
}

.ServerStatePanelBody {
    background: grey;
}

.StatsTitle {
    cursor: pointer;
}

.TableAdvanced {
    display: block;
    overflow-y: auto;
    max-height: 30vh;
}

.Error {
    color: red;
}

.Warning {
    color: rgb(245, 153, 16);
}
.Log {
    color: blue;
}
